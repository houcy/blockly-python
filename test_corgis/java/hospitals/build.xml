<?xml version="1.0"?>
<project name="Build Hospitals" basedir="." default="dist">
	<description>
		A build file to generate a distributable .jar for the RealTimeWeb Hospitals.
	</description>
	
	<property name="src" location="src"/>
	<property name="bin" location="bin"/>
	<property name="dist" location="dist"/>
	<property name="docs" location="docs"/>
	<property name="ver" value="1"/>
	<!-- <propertyfile file=".properties">
		<entry key="docs" value="docs/" />
	</propertyfile>-->
	
	<path id="classpath">
		<fileset dir="libs" includes="**/*.jar" />
	</path>
	
	<target name="init">
	    <!-- Create the build directory structure used by compile -->
	    <mkdir dir="${bin}"/>
		<!-- Create the doc directory structure used by compile -->
		<mkdir dir="${docs}"/>
	</target>
	
	<target name="compile" depends="init" description="Compile the source" >
	    <!-- Compile the java code from ${src} into ${build} -->
	    <javac srcdir="${src}" destdir="${bin}" classpathref="classpath" includeantruntime="false"/>
		<!-- Copy all the non-.java files to ${build} -->
		<copy todir="bin">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
		<!-- Compile Javadoc -->
		<javadoc  
		      use='true' author='true'  version='true'
		      overview='docs/index.html'  
		      access='package' 
		      sourcepath='src'
		      packagenames='*.*'
              classpathref="classpath"              
		      destdir='${docs}'
		      windowtitle='Hospitals: version ${ver}'
		      noqualifier='java.*:javax.*:com.sun.*'   
		      linksource='true'
		    />
	</target>
	
	<target name="dist" depends="compile" description="Generate the Distribution files" >
	    <!-- Create the distribution directory -->
	    <mkdir dir="${dist}"/>

	    <!-- Put everything in ${build} into the hospitals-${DSTAMP}.jar file -->
	    <jar jarfile="${dist}/hospitals-${ver}.jar" basedir="${bin}">
	    	<fileset dir="bin" includes="bin/*.class" />
            <fileset file="hospitals.db" />
			<zipgroupfileset dir="libs/" includes="*.jar" />
            <manifest><attribute name="Main-Class" value="corgis.hospitals.HospitalsLibrary" /></manifest>
		</jar>
		
		<!-- Put everything in ${build} and ${docs} into the hospitals-doc-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/hospitals-doc-${ver}.jar" basedir="${bin}">
	    	<fileset dir="bin" includes="bin/*.class" />
			<fileset dir="docs" includes="**" />
            <fileset file="hospitals.db" />
			<zipgroupfileset dir="libs/" includes="*.jar" />
            <manifest><attribute name="Main-Class" value="corgis.hospitals.HospitalsLibrary" /></manifest>
		</jar>
		
		<!-- Put everything in ${build} and ${src} into the hospitals-src-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/hospitals-src-${ver}.jar" basedir="${bin}">
	    	<fileset dir="bin" includes="bin/*.class" />
			<fileset dir="src" includes="**" />
            <fileset file="hospitals.db" />
			<zipgroupfileset dir="libs/" includes="*.jar" />
            <manifest><attribute name="Main-Class" value="corgis.hospitals.HospitalsLibrary" /></manifest>
		</jar>
	</target>
	
		
	<target name="clean" description="Clean up the files" >
	    <!-- Delete the ${build} and ${dist} directory trees -->
	    <delete dir="${bin}"/>
	    <delete dir="${dist}"/>
	</target>
</project>